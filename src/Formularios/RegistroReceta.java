/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Formularios;

import Beans.Medicamento;
import Beans.MedicoBean;
import Beans.Paciente;
import Beans.RecetaMedicaBean;
import Clases.RecetaMedica;
import Clases.ServicioRespuesta;
import PDF.Informe;
import UpperEssential.UpperEssentialLookAndFeel;
import com.itextpdf.text.DocumentException;
import java.awt.GridLayout;
import java.io.FileNotFoundException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author laloe
 */
public class RegistroReceta extends javax.swing.JDialog {

    MedicoBean medico_responsable = null;
    Paciente paciente = null;
    RecetaMedica receta = null;
    List<Medicamento> listaMedicamentos = null;
    ArrayList<Medicamento> listaMedicamentosSel;
    Vector columnas = null;
    boolean completado = false;
    String ruta;

    /**
     * Creates new form RecetaMedica2
     */
    public RegistroReceta(javax.swing.JDialog parent, boolean modal, int idConsulta, MedicoBean m, Paciente p, String ruta) {
        super(parent, modal);
        initComponents();
        this.ruta = ruta;
        System.out.println("Ruta en Receta: " + this.ruta);
        listaMedicamentosSel = new ArrayList<>();
        receta = new RecetaMedica(idConsulta);
        //fecha.setText(new SimpleDateFormat("yyyy-MM-dd").format(new Date()));
        this.setTitle("Registro de Receta de la consulta: " + idConsulta);
        cargarMedicamentos();
        columnas = new Vector();
        columnas.add("Id");
        columnas.add("Nombre");
        columnas.add("Presentacion");
        columnas.add("dosis");
        llenarTabla();

        this.medico_responsable = m;
        this.paciente = p;
        nombrePac.setText(this.paciente.getNombre() + " " + this.paciente.getApellidoPaterno() + " " + this.paciente.getApellidoMaterno());
        nombreResp.setText(this.medico_responsable.getNombre() + " " + this.medico_responsable.getApellidoPaterno() + " " + this.medico_responsable.getApellidoMaterno());
        if (this.medico_responsable.getEspecialidad().equals("OPTOMETRISTA")) {
            especialidad.setSelectedIndex(0);
        } else if (this.medico_responsable.getEspecialidad().equals("OFTÁLMOLOGO")) {
            especialidad.setSelectedIndex(1);
        } else {
            especialidad.setSelectedIndex(0);
        }
        cedulaResp.setText(String.valueOf(this.medico_responsable.getCedulaProfesional()));
        nombreMedi.setVisible(false);
        dosis.setVisible(false);
        jLabel3.setVisible(false);
        presentacionMedi.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        recomendaciones = new javax.swing.JTextPane();
        registrarReceta = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaMedicamentos = new javax.swing.JTable();
        agregar = new javax.swing.JButton();
        nuevo = new javax.swing.JButton();
        dosis = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        fechaCons = new datechooser.beans.DateChooserCombo();
        comboMedicamentos = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        nombrePac = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        nombreResp = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        especialidad = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        cedulaResp = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        proxCita = new datechooser.beans.DateChooserCombo();
        jLabel12 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        nombreMedi = new javax.swing.JTextField();
        presentacionMedi = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        dosisMedi = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1300, 600));

        jScrollPane2.setViewportView(recomendaciones);

        registrarReceta.setText("Registrar Receta");
        registrarReceta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registrarRecetaActionPerformed(evt);
            }
        });

        tablaMedicamentos.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tablaMedicamentos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "idMedicamento", "Nombre", "Presentación", "Dosis"
            }
        ));
        tablaMedicamentos.setEnabled(false);
        jScrollPane1.setViewportView(tablaMedicamentos);

        agregar.setText("Agregar");
        agregar.setActionCommand("");
        agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarActionPerformed(evt);
            }
        });

        nuevo.setText("Nuevo Medicamento");
        nuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoActionPerformed(evt);
            }
        });

        jLabel1.setText("Nombre del Medicamento:");

        jLabel2.setText("Fecha de la Consulta:");

        jLabel3.setText("Presentación:");

        jLabel4.setText("Medicamentos Agregados:");

        jLabel5.setText("Recomendaciones Generales para el Paciente:");

        jButton1.setText("Abrir PDF");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        fechaCons.setEnabled(false);

        comboMedicamentos.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Paracetamol", "Gotas", "Jarabe" }));

        jLabel6.setText("Nombre Completo del Paciente:");

        nombrePac.setEditable(false);

        jLabel7.setText("Nombre Completo del Responsable:");

        nombreResp.setEditable(false);

        jLabel8.setText("Especialidad:");

        especialidad.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "OPTOMETRISTA", "OFTÁLMOLOGO" }));
        especialidad.setEnabled(false);

        jLabel9.setText("Cédula Profesional:");

        cedulaResp.setEditable(false);

        jLabel10.setText("Proxima Cita:");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel12.setText("RECETA MÉDICA");

        jLabel11.setText("INGRESE LOS MEDICAMENTOS CORRESPONDIENTES:");

        nombreMedi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombreMediActionPerformed(evt);
            }
        });

        jLabel13.setText("Dosis:");

        jButton2.setText("Regresar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(305, 305, 305)
                .addComponent(registrarReceta)
                .addGap(130, 130, 130)
                .addComponent(jButton1)
                .addGap(131, 131, 131)
                .addComponent(jButton2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(495, 495, 495))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(436, 436, 436))))
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nombrePac, javax.swing.GroupLayout.PREFERRED_SIZE, 418, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(fechaCons, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel10)
                                .addGap(18, 18, 18)
                                .addComponent(proxCita, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(comboMedicamentos, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(nuevo)
                                        .addGap(59, 59, 59)
                                        .addComponent(jLabel3)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(59, 59, 59)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(76, 76, 76)
                                                .addComponent(dosisMedi, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(agregar))
                                            .addComponent(jLabel4))
                                        .addGap(0, 26, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel13)
                                            .addComponent(presentacionMedi, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(nombreMedi, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(dosis, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(15, 15, 15)))))
                        .addGap(50, 50, 50))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel11)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nombreResp, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel8)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(especialidad, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cedulaResp)
                        .addGap(42, 42, 42))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(nombrePac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addComponent(jLabel10))
                            .addComponent(proxCita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(nombreResp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(especialidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(cedulaResp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel11)
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel13)
                            .addComponent(dosisMedi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(agregar)
                            .addComponent(comboMedicamentos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nombreMedi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nuevo)
                            .addComponent(dosis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(presentacionMedi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(registrarReceta)
                            .addComponent(jButton1)
                            .addComponent(jButton2)))
                    .addComponent(fechaCons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void registrarRecetaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registrarRecetaActionPerformed

        if (listaMedicamentosSel.isEmpty()) {
            JOptionPane.showMessageDialog(null, "No se ha introducido ningun medicamento", "Registro No Completado",
                    JOptionPane.ERROR_MESSAGE);
        } else if (recomendaciones.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "No se ha introducido alguna recomendacion", "Registro No Completado",
                    JOptionPane.ERROR_MESSAGE);
        } else {
            String f_nac = proxCita.getText();//01/10/1999
            if (f_nac.length() <= 9) {
                f_nac = "0" + f_nac;
            }
            f_nac = f_nac.substring(6, 10) + f_nac.substring(2, 6) + f_nac.substring(0, 2);
            boolean respuesta = receta.registrarReceta(recomendaciones.getText(), listaMedicamentosSel, (ruta + "Receta.pdf"),f_nac);
            if (respuesta == true) {
                //JOptionPane.showMessageDialog(null, "Registro de la Receta exitoso", "Registro Completado",
                 //       JOptionPane.INFORMATION_MESSAGE);
                completado = true;
                crearPDF();
                registrarReceta.setEnabled(false);
            }
        }
    }//GEN-LAST:event_registrarRecetaActionPerformed

    private void agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarActionPerformed
            //Medicamento m = listaMedicamentos.get(comboMedicamentos.getSelectedIndex());
            /*String sel_nom,sel_pre,completa;
         completa=comboMedicamentos.getSelectedItem().toString();
         sel_nom=completa.substring(0,completa.indexOf("-"));
         sel_pre=completa.substring(completa.indexOf("-")+1);
            
         Medicamento mnuevo = new Medicamento(1, sel_nom, sel_pre, dosisMedi.getText());

         listaMedicamentosSel.add(mnuevo);
         llenarTabla();
         nombreMedi.setText("");
         presentacionMedi.setText("");
         dosisMedi.setText("");*/
        if (dosisMedi.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Ingresar dosis para el medicamento seleccionado", "Dosis no introducida",
                    JOptionPane.ERROR_MESSAGE);
        } else if (comboMedicamentos.getSelectedIndex() == -1) {
            JOptionPane.showMessageDialog(null, "Seleccionar un Medicamento", "Medicamento no Seleccionado",
                    JOptionPane.ERROR_MESSAGE);
        } else {
            Medicamento m = listaMedicamentos.get(comboMedicamentos.getSelectedIndex());
            Medicamento mnuevo = new Medicamento(m.getIdMedicamento(), m.getNombre(), m.getPresentacion(), dosisMedi.getText());

            listaMedicamentosSel.add(mnuevo);
            llenarTabla();
            comboMedicamentos.setSelectedIndex(-1);
            dosisMedi.setText("");
        }
    }//GEN-LAST:event_agregarActionPerformed
    private void cargarMedicamentos() {
        comboMedicamentos.removeAllItems();
        ServicioRespuesta respuesta = receta.obtenerMedicamentos();
        if (respuesta.isSuccess()) {
            listaMedicamentos = (List) respuesta.getResult();
            for (Medicamento med : listaMedicamentos) {
                comboMedicamentos.addItem(med.getNombre() + "-" + med.getPresentacion());
            }
            comboMedicamentos.setSelectedIndex(-1);
        }
    }
    private void llenarTabla() {
        DefaultTableModel datos = new DefaultTableModel();
        for (int i = 0; i < columnas.size(); i++) {
            datos.addColumn(columnas.get(i));
        }
        this.tablaMedicamentos.setModel(datos);
        for (Medicamento med : listaMedicamentosSel) {
            Vector vec = new Vector();
            vec.add(med.getIdMedicamento());
            vec.add(med.getNombre());
            vec.add(med.getPresentacion());
            vec.add(med.getDosis());
            datos.addRow(vec);
        }
    }
    private void nuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoActionPerformed
        // TODO add your handling code here:
        JPanel panel = new JPanel();
        JTextField nombre = new JTextField();
        JTextField presentacion = new JTextField();
        JLabel name = new JLabel("Nombre: ");
        JLabel present = new JLabel("Presentación: ");

        panel.setLayout(new GridLayout(2, 2));
        panel.add(name);
        panel.add(nombre);
        panel.add(present);
        panel.add(presentacion);
        int desicion = JOptionPane.showOptionDialog(null, panel, "Crear Medicamento", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);
        if (desicion == 0) {
            if (nombre.getText().equals("") && presentacion.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Todos Los campos deben estar llenos ", "No se realizo el registro",
                        JOptionPane.ERROR_MESSAGE);
            } else {
                Medicamento medic = new Medicamento();
                medic.setNombre(nombre.getText());
                System.out.println(nombre.getText());
                medic.setPresentacion(presentacion.getText());
                System.out.println(presentacion.getText());
                ServicioRespuesta respuesta = receta.crearMedicamento(medic);
                if (respuesta.isSuccess()) {
                    JOptionPane.showMessageDialog(null, "El medicamento se registro exitosamente", "Registro Completado",
                            JOptionPane.INFORMATION_MESSAGE);
                }
                cargarMedicamentos();
            }
        }
    }//GEN-LAST:event_nuevoActionPerformed
public void crearPDF(){
    RecetaMedicaBean recetaMB = new RecetaMedicaBean();
        recetaMB.setNombrePaciente(nombrePac.getText());
        recetaMB.setFecha(fechaCons.getText());
        recetaMB.setProximaCita(proxCita.getText());
        recetaMB.setNombreResponsable(nombreResp.getText());
        recetaMB.setCedulaResp(cedulaResp.getText());
        recetaMB.setRecomendaciones(recomendaciones.getText());

        String cadena;
        if (especialidad.getSelectedIndex() == 0) {
            cadena = "Optometrista";
        } else {
            cadena = "Oftálmologo";
        }

        recetaMB.setEspecialidadResp(cadena);
        recetaMB.setMedicamentos(listaMedicamentosSel);
        
        Informe recetaPdf = new Informe();
        try {

            recetaPdf.generarRecetaPDF(recetaMB, ruta);
            JOptionPane.showMessageDialog(null, "La receta médica se genero exitosamente", "GENERAR RECETA EN PDF", JOptionPane.INFORMATION_MESSAGE);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(RegistroReceta.class.getName()).log(Level.SEVERE, null, ex);
        } catch (DocumentException ex) {
            Logger.getLogger(RegistroReceta.class.getName()).log(Level.SEVERE, null, ex);
        }
}
    private void nombreMediActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombreMediActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombreMediActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        receta.abrirReceta(ruta+"Receta.pdf");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistroReceta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistroReceta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistroReceta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistroReceta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog 
         try {
         UIManager.setLookAndFeel(new UpperEssentialLookAndFeel("C:\\Users\\Sergio\\Desktop\\Checo1.theme"));
         }catch (UnsupportedLookAndFeelException e )
         {
            
         }
         java.awt.EventQueue.invokeLater(new Runnable() {
         public void run() {
         RegistroReceta dialog = new RegistroReceta(new javax.swing.JDialog(), true,3);
         dialog.addWindowListener(new java.awt.event.WindowAdapter() {
         @Override
         public void windowClosing(java.awt.event.WindowEvent e) {
         System.exit(0);
         }
         });
         dialog.setVisible(true);
                 
         }
         });*/
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agregar;
    private javax.swing.JTextField cedulaResp;
    private javax.swing.JComboBox comboMedicamentos;
    private javax.swing.JTextField dosis;
    private javax.swing.JTextField dosisMedi;
    private javax.swing.JComboBox especialidad;
    private datechooser.beans.DateChooserCombo fechaCons;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField nombreMedi;
    private javax.swing.JTextField nombrePac;
    private javax.swing.JTextField nombreResp;
    private javax.swing.JButton nuevo;
    private javax.swing.JTextField presentacionMedi;
    private datechooser.beans.DateChooserCombo proxCita;
    private javax.swing.JTextPane recomendaciones;
    private javax.swing.JButton registrarReceta;
    private javax.swing.JTable tablaMedicamentos;
    // End of variables declaration//GEN-END:variables
}
